{"ast":null,"code":"import _regeneratorRuntime from\"G:/s3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"G:/s3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import apiRoot from'../../ApiPath';//actions\nexport var getAll='getAll';export var Create='Create';export var Update='Update';// action creator\n// this module handles create the task\nexport var createTask=function createTask(data){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(\"\".concat(apiRoot.url,\"/task/lead_04412ba1d622466cab1f0ad941fcf303\"),data).then(function(response){return response.data;}).then(function(result){dispatch({type:Create,payload:'Success'});},function(err){dispatch({type:Create,payload:'Error'});});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};// this module update the ttask\nexport var updateTask=function updateTask(data,id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.put(\"\".concat(apiRoot.url,\"/task/lead_04412ba1d622466cab1f0ad941fcf303/\").concat(id),data).then(function(response){return response.data;}).then(function(result){dispatch({type:Update,payload:'Success'});},function(err){dispatch({type:Update,payload:'Error'});});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// this module handles get all task\nexport var getAlltasks=function getAlltasks(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.get(\"\".concat(apiRoot.url,\"/task/lead_04412ba1d622466cab1f0ad941fcf303\")).then(function(response){return response.data;}).then(function(result){dispatch({type:getAll,payload:result.results});},function(err){dispatch({type:getAll,payload:[]});});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["G:/s3/src/store/Action/taskAction.js"],"names":["axios","apiRoot","getAll","Create","Update","createTask","data","dispatch","post","url","then","response","result","type","payload","err","updateTask","id","put","getAlltasks","get","results"],"mappings":"qPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CAEA;AACA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAAf,CACP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAAf,CACP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAAf,CAEP;AAEA;AACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,iGAAU,iBAAMC,QAAN,wIAC1BP,CAAAA,KAAK,CAACQ,IAAN,WAAcP,OAAO,CAACQ,GAAtB,gDAAuEH,IAAvE,EACDI,IADC,CACI,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACL,IAAb,EADZ,EAEDI,IAFC,CAGE,SAAAE,MAAM,CAAI,CACNL,QAAQ,CAAC,CACLM,IAAI,CAAEV,MADD,CAELW,OAAO,CAAE,SAFJ,CAAD,CAAR,CAIH,CARH,CASE,SAAAC,GAAG,CAAI,CACHR,QAAQ,CAAC,CACLM,IAAI,CAAEV,MADD,CAELW,OAAO,CAAE,OAFJ,CAAD,CAAR,CAIH,CAdH,CAD0B,uDAAV,gEAAnB,CAkBP;AACA,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACV,IAAD,CAAMW,EAAN,kGAAa,kBAAMV,QAAN,6IAC7BP,CAAAA,KAAK,CAACkB,GAAN,WAAajB,OAAO,CAACQ,GAArB,wDAAuEQ,EAAvE,EAA4EX,IAA5E,EACDI,IADC,CACI,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACL,IAAb,EADZ,EAEDI,IAFC,CAGE,SAAAE,MAAM,CAAI,CACNL,QAAQ,CAAC,CACLM,IAAI,CAAET,MADD,CAELU,OAAO,CAAE,SAFJ,CAAD,CAAR,CAIH,CARH,CASE,SAAAC,GAAG,CAAI,CACHR,QAAQ,CAAC,CACLM,IAAI,CAAET,MADD,CAELU,OAAO,CAAE,OAFJ,CAAD,CAAR,CAIH,CAdH,CAD6B,yDAAb,kEAAnB,CAmBP;AAEA,MAAO,IAAMK,CAAAA,WAAW,CAAE,QAAbA,CAAAA,WAAa,mGAAM,kBAAMZ,QAAN,6IAEtBP,CAAAA,KAAK,CAACoB,GAAN,WAAanB,OAAO,CAACQ,GAArB,iDACDC,IADC,CACI,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACL,IAAb,EADZ,EAEDI,IAFC,CAGE,SAAAE,MAAM,CAAI,CACNL,QAAQ,CAAC,CACLM,IAAI,CAAEX,MADD,CAELY,OAAO,CAAEF,MAAM,CAACS,OAFX,CAAD,CAAR,CAIH,CARH,CASE,SAAAN,GAAG,CAAI,CACHR,QAAQ,CAAC,CACLM,IAAI,CAAEX,MADD,CAELY,OAAO,CAAE,EAFJ,CAAD,CAAR,CAKH,CAfH,CAFsB,yDAAN,kEAAnB","sourcesContent":["import axios from 'axios';\nimport apiRoot from '../../ApiPath';\n\n//actions\nexport const getAll = 'getAll';\nexport const Create = 'Create';\nexport const Update = 'Update';\n\n// action creator\n\n// this module handles create the task\nexport const createTask = (data) => async dispatch => {\n    await axios.post(`${apiRoot.url}/task/lead_04412ba1d622466cab1f0ad941fcf303`,data)\n        .then(response => response.data)\n        .then(\n            result => {\n                dispatch({\n                    type: Create,\n                    payload: 'Success'\n                });\n            },\n            err => {             \n                dispatch({\n                    type: Create,\n                    payload: 'Error'\n                });\n            }\n        );\n};\n// this module update the ttask\nexport const updateTask = (data,id) => async dispatch => {\n    await axios.put(`${apiRoot.url}/task/lead_04412ba1d622466cab1f0ad941fcf303/${id}`,data)\n        .then(response => response.data)\n        .then(\n            result => {\n                dispatch({\n                    type: Update,\n                    payload: 'Success'\n                });\n            },\n            err => {            \n                dispatch({\n                    type: Update,\n                    payload: 'Error'\n                });\n            }\n        );\n};\n\n// this module handles get all task\n\nexport const getAlltasks= () => async dispatch => {\n\n    await axios.get(`${apiRoot.url}/task/lead_04412ba1d622466cab1f0ad941fcf303`)\n        .then(response => response.data)\n        .then(\n            result => {\n                dispatch({\n                    type: getAll,\n                    payload: result.results\n                });\n            },\n            err => {\n                dispatch({\n                    type: getAll,\n                    payload: []\n                });\n\n            }\n        );\n};\n"]},"metadata":{},"sourceType":"module"}