{"ast":null,"code":"var _jsxFileName = \"F:\\\\sss\\\\SpiceBlue_task_UI-main\\\\src\\\\components\\\\Task.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Container, Jumbotron, Card, ListGroup, Form, Button, Col, Row } from 'react-bootstrap';\nimport { getAlltasks, createTask, updateTask } from '../store/Action/taskAction';\nimport apiRoot from '../ApiPath';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Task extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: '',\n      taskDescription: 'Follow Up',\n      date: new Date().toLocaleDateString('fr-CA'),\n      time: new Date().getTime(),\n      assignedTo: 'Karthikeyan',\n      hide: true,\n      taskList: [],\n      taskListDuplicate: []\n    };\n\n    this.click = i => {\n      const {\n        taskListDuplicate\n      } = this.state;\n      console.log(taskListDuplicate);\n      this.setState({\n        id: i.id,\n        taskList: taskListDuplicate\n      });\n\n      if (i.id) {\n        axios.get(`${apiRoot.url}/task/lead_04412ba1d622466cab1f0ad941fcf303/${i.id}`).then(response => response.data).then(result => {\n          this.time_convert(result.results.task_time);\n          this.setState({\n            taskDescription: result.results.task_msg,\n            id: result.results.id,\n            date: new Date(result.results.task_date).toLocaleDateString('fr-CA'),\n            assignedTo: result.results.assigned_user\n          }); // this module remove new element and shows previous one\n\n          const beforedelete = _.cloneDeep(taskListDuplicate);\n\n          const id = beforedelete.find(f => f.id === i.id);\n          const index = beforedelete.indexOf(id);\n          beforedelete.splice(index, 1);\n          this.setState({\n            taskList: beforedelete\n          });\n          this.show();\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.hide = () => {\n      const {\n        taskListDuplicate\n      } = this.state;\n      this.setState({\n        taskList: taskListDuplicate,\n        hide: true,\n        id: ''\n      });\n    };\n\n    this.show = () => {\n      const {\n        taskListDuplicate\n      } = this.state;\n      this.setState({\n        taskList: taskListDuplicate,\n        hide: false\n      });\n    };\n\n    this.save = e => {\n      this.hide();\n      e.preventDefault();\n      const {\n        taskDescription,\n        date,\n        time,\n        assignedTo,\n        id\n      } = this.state;\n      const params = {\n        id: id,\n        task_msg: taskDescription,\n        task_date: date,\n        task_time: time,\n        assigned_user: assignedTo\n      };\n\n      if (id === '') {\n        //\tthis.props.createTask(params);\n        console.log(params);\n      } else {\n        this.props.updateTask(params);\n      }\n    };\n\n    this.handleDelete = () => {\n      const {\n        id\n      } = this.state;\n\n      if (id) {\n        axios.delete(`${apiRoot.url}/task/lead_04412ba1d622466cab1f0ad941fcf303/${id}`).then(response => response.data).then(result => {\n          this.hide();\n          this.props.getAlltasks();\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAlltasks();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      taskList: nextProps.alltasks,\n      taskListDuplicate: nextProps.alltasks\n    });\n\n    if (nextProps.statusMessage === 'Success') {\n      this.props.getAlltasks();\n    }\n  }\n\n  time_convert(num) {\n    var hours = Math.floor(num / 60);\n    var minutes = num % 60;\n    this.setState({\n      time: hours + \":\" + minutes\n    }); // return;         \n  } // Getting on task and switch to edit mode\n\n\n  render() {\n    const {\n      taskDescription,\n      date,\n      time,\n      assignedTo,\n      taskList,\n      hide,\n      id\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        bsPrefaix: \"nc\",\n        children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '28rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: [\"Task  \", 'a', \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: this.show,\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"float-right \",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-plus\",\n                    \"aria-hidden\": \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 87\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                hidden: hide,\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  className: \"background\",\n                  onSubmit: this.save,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                    className: \"acount-filled\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      as: Col,\n                      xs: 12,\n                      sm: 12,\n                      md: 12,\n                      lg: 12,\n                      xl: 12,\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Task Description\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        required: true,\n                        type: \"text\",\n                        placeholder: \"Description if task\",\n                        onChange: this.handleChange,\n                        value: taskDescription,\n                        name: \"taskDescription\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                    className: \"acount-filled\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                      as: Col,\n                      xs: 6,\n                      sm: 6,\n                      md: 6,\n                      lg: 6,\n                      xl: 6,\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        required: true,\n                        type: \"date\",\n                        onChange: this.handleChange,\n                        placeholder: \"date\",\n                        value: date,\n                        name: \"date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      as: Col,\n                      xs: 6,\n                      sm: 6,\n                      md: 6,\n                      lg: 6,\n                      xl: 6,\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Time\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"time\",\n                        onChange: this.handleChange,\n                        placeholder: \"time\",\n                        value: time,\n                        name: \"time\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                    className: \"acount-filled\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      as: Col,\n                      xs: 12,\n                      sm: 12,\n                      md: 12,\n                      lg: 12,\n                      xl: 12,\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Assign User\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        required: true,\n                        type: \"text\",\n                        onChange: this.handleChange,\n                        placeholder: \"Assign User\",\n                        value: assignedTo,\n                        name: \"assignedTo\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      className: \"float-left\",\n                      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                        hidden: id === '' ? true : false,\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-trash-o\",\n                          \"aria-hidden\": \"true\",\n                          onClick: this.handleDelete\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 51\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      className: \"float-right\",\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outline-secondary\",\n                        type: \"button\",\n                        onClick: this.hide,\n                        className: \"mr-2\",\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"success\",\n                        type: \"submit\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 9\n              }, this), taskList.map(i => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: i.task_msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 26\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 45\n                }, this), new Date(i.task_date).toLocaleDateString('fr-CA'), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => this.click(i),\n                  style: {\n                    marginTop: '-25px'\n                  },\n                  className: \" float-right hideEdit\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-pencil\",\n                    \"aria-hidden\": \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 113\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 10\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }, this);\n  }\n\n} // mapping redux state value to props\n\n\nconst mapStateToProps = state => ({\n  alltasks: state.Tasks,\n  statusMessage: state.status\n}); // connects store to component\n\n\nexport default connect(mapStateToProps, {\n  getAlltasks,\n  createTask,\n  updateTask\n})(Task);","map":{"version":3,"sources":["F:/sss/SpiceBlue_task_UI-main/src/components/Task.jsx"],"names":["React","Component","axios","_","connect","Container","Jumbotron","Card","ListGroup","Form","Button","Col","Row","getAlltasks","createTask","updateTask","apiRoot","Task","state","id","taskDescription","date","Date","toLocaleDateString","time","getTime","assignedTo","hide","taskList","taskListDuplicate","click","i","console","log","setState","get","url","then","response","data","result","time_convert","results","task_time","task_msg","task_date","assigned_user","beforedelete","cloneDeep","find","f","index","indexOf","splice","show","err","handleChange","e","target","name","value","save","preventDefault","params","props","handleDelete","delete","componentDidMount","componentWillReceiveProps","nextProps","alltasks","statusMessage","num","hours","Math","floor","minutes","render","width","map","marginTop","mapStateToProps","Tasks","status"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Container, Jumbotron, Card, ListGroup, Form, Button, Col, Row } from 'react-bootstrap';\nimport { getAlltasks, createTask, updateTask } from '../store/Action/taskAction';\n\nimport apiRoot from '../ApiPath';\n\nclass Task extends Component {\n\tstate = {\n\t\tid: '',\n\t\ttaskDescription: 'Follow Up',\n\t\tdate: new Date().toLocaleDateString('fr-CA'),\n\t\ttime: new Date().getTime(),\n\t\tassignedTo: 'Karthikeyan',\n\t\thide: true,\n\t\ttaskList: [],\n\t\ttaskListDuplicate: []\n\t}\n\tcomponentDidMount() {\n\t\tthis.props.getAlltasks();\n\t};\n\tcomponentWillReceiveProps(nextProps) {\n\n\t\tthis.setState({\n\t\t\ttaskList: nextProps.alltasks,\n\t\t\ttaskListDuplicate: nextProps.alltasks\n\t\t});\n\n\t\tif (nextProps.statusMessage === 'Success') {\n\t\t\tthis.props.getAlltasks()\n\t\t}\n\t};\n\ttime_convert(num)\n\t{ \n\t var hours = Math.floor(num / 60);  \n\t var minutes = num % 60;\n\t this.setState({\n\t\ttime:   hours + \":\" + minutes\n\t })\n\t// return;         \n   }\n\t// Getting on task and switch to edit mode\n\tclick = (i) => {\n\t\tconst { taskListDuplicate } = this.state;\n\t\tconsole.log(taskListDuplicate)\n\n\t\tthis.setState({\n\t\t\tid: i.id,\n\t\t\ttaskList: taskListDuplicate\n\t\t})\n\t\tif (i.id) {\n\t\t\taxios\n\t\t\t\t.get(`${apiRoot.url}/task/lead_04412ba1d622466cab1f0ad941fcf303/${i.id}`)\n\t\t\t\t.then(response => response.data)\n\t\t\t\t.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tthis.time_convert(result.results.task_time)\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\ttaskDescription: result.results.task_msg,\n\t\t\t\t\t\t\tid: result.results.id,\n\t\t\t\t\t\t\tdate: new Date(result.results.task_date).toLocaleDateString('fr-CA'),\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tassignedTo: result.results.assigned_user,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// this module remove new element and shows previous one\n\t\t\t\t\t\tconst beforedelete = _.cloneDeep(taskListDuplicate);\n\t\t\t\t\t\tconst id = beforedelete.find(f => f.id === i.id);\n\t\t\t\t\t\tconst index = beforedelete.indexOf(id);\n\t\t\t\t\t\tbeforedelete.splice(index, 1);\n\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\ttaskList: beforedelete,\n\t\t\t\t\t\t})\n\n\n\t\t\t\t\t\tthis.show()\n\t\t\t\t\t},\n\t\t\t\t\terr => {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t}\n\n\t};\n\t//this module handles the state variable change\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t};\n\n\t//this function hides the form\n\thide = () => {\n\t\tconst { taskListDuplicate } = this.state;\n\n\t\tthis.setState({\n\t\t\ttaskList: taskListDuplicate,\n\t\t\thide: true,\n\t\t\tid: ''\n\t\t})\n\t};\n\n\t//this function shows the form\n\tshow = () => {\n\t\tconst { taskListDuplicate } = this.state;\n\n\t\tthis.setState({\n\t\t\ttaskList: taskListDuplicate,\n\t\t\thide: false\n\t\t})\n\t};\n\t// this function adding/updating task in database\n\tsave = (e) => {\n\t\tthis.hide()\n\t\te.preventDefault();\n\t\tconst { taskDescription, date, time, assignedTo, id } = this.state;\n\t\n\t\t\n\t\tconst params = {\n\t\t\tid:id,\n\t\t\ttask_msg:taskDescription,\n\t\t\ttask_date:date,\n\t\t\ttask_time: time,\n\t\t\tassigned_user:assignedTo\n\t\t}\n\t\tif (id === '') {\n\t\t//\tthis.props.createTask(params);\n\t\t\tconsole.log(params)\n\t\t} else {\n\t\t\tthis.props.updateTask(params);\n\n\t\t}\n\n\t};\n\n\t//this function deletes the data task based on on id\n\thandleDelete = () => {\n\t\tconst { id } = this.state;\n\n\t\tif (id) {\n\t\t\taxios\n\t\t\t\t.delete(`${apiRoot.url}/task/lead_04412ba1d622466cab1f0ad941fcf303/${id}`)\n\t\t\t\t.then(response => response.data)\n\t\t\t\t.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\tthis.props.getAlltasks();\n\t\t\t\t\t},\n\t\t\t\t\terr => {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t}\n\n\t};\n\trender() {\n\t\tconst { taskDescription, date, time, assignedTo, taskList, hide, id } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Container bsPrefaix=\"nc\" >\n\t\t\t\t\t<Jumbotron className=\"mt-5\">\n\t\t\t\t\t\t<Card style={{ width: '28rem' }}>\n\t\t\t\t\t\t\t<Card.Header >Task  {'a'} <a onClick={this.show}> <h6 className=\"float-right \"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></h6></a></Card.Header >\n\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t\t\t\t\t<ListGroup.Item hidden={hide}>\n\n\t\t\t\t\t\t\t\t\t<Form className=\"background\" onSubmit={this.save}>\n\n\t\t\t\t\t\t\t\t\t\t<Form.Row className=\"acount-filled\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} xs={12} sm={12} md={12} lg={12} xl={12} >\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Task Description</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Description if task\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={taskDescription}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"taskDescription\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Form.Row>\n\n\t\t\t\t\t\t\t\t\t\t<Form.Row className=\"acount-filled\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} xs={6} sm={6} md={6} lg={6} xl={6} >\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Date</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"date\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"date\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} xs={6} sm={6} md={6} lg={6} xl={6} >\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Time</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"time\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"time\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={time}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"time\"\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Form.Row>\n\t\t\t\t\t\t\t\t\t\t<Form.Row className=\"acount-filled\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} xs={12} sm={12} md={12} lg={12} xl={12} >\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Assign User</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Assign User\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={assignedTo}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"assignedTo\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Form.Row>\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col className=\"float-left\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h4 hidden={id === '' ? true : false}><i class=\"fa fa-trash-o\" aria-hidden=\"true\" onClick={this.handleDelete}></i></h4>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col className=\"float-right\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" type=\"button\" onClick={this.hide} className=\"mr-2\" >\n\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n \t\t\t\t\t\t\t\t\t\t\t \t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"success\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tSubmit\n \t\t\t\t\t\t\t\t\t\t \t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t\t{taskList.map(i => (\n\t\t\t\t\t\t\t\t\t<ListGroup.Item><b>{i.task_msg}</b><br />{new Date(i.task_date).toLocaleDateString('fr-CA')}\n\t\t\t\t\t\t\t\t\t<button onClick={() => this.click(i)} style={{ marginTop: '-25px' }} className=\" float-right hideEdit\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button></ListGroup.Item>\n\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t</Jumbotron>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t)\n\n\t}\n}\n// mapping redux state value to props\nconst mapStateToProps = (state) => ({\n\talltasks: state.Tasks,\n\tstatusMessage: state.status,\n})\n// connects store to component\nexport default connect(mapStateToProps, { getAlltasks, createTask, updateTask })(Task);"]},"metadata":{},"sourceType":"module"}